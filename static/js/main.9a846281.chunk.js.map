{"version":3,"sources":["PlayList/index.js","ErrorAlert/index.js","PlayWindow/index.js","Search/index.js","SearchResults/AddToPlayListButton/index.js","SearchResults/index.js","youtube.js","App.js","index.js"],"names":["PlayList","props","handleRemoveFromPlaylist","playlist","setPlaylist","cookies","Container","className","ListGroup","variant","length","Row","Col","Button","onClick","remove","map","song","Item","md","Image","src","imgSrc","thumbnail","title","ErrorAlert","content","Alert","Heading","heading","body","PlayWindow","useState","Math","floor","random","startTime","setStartTime","video","setVideo","style","width","height","url","videoId","playing","size","without","Search","onSearchButtonClick","setSearchString","handlePlayClick","playWindowOpen","setErrorContent","searchString","onAddUrlClick","a","split","ampersandPosition","indexOf","substring","axios","get","then","response","newPlaylist","append","data","thumbnail_url","set","JSON","stringify","path","catch","err","InputGroup","FormControl","placeholder","aria-label","aria-describedby","type","name","value","onChange","e","target","onKeyPress","which","Append","AddToPlayListButton","handleAddToPlaylist","inPlaylist","result","SearchResults","results","id","snippet","thumbnails","default","includes","pluck","Card","Img","medium","Body","Text","create","baseURL","params","part","maxResults","key","App","Cookies","searchResults","setSearchResults","setPlayWindowOpen","errorContent","youtube","q","items","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a846281.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nexport const PlayList = props => {\n  const { handleRemoveFromPlaylist, playlist, setPlaylist, cookies } = props;\n  const handleClearPlaylist = () => {\n    setPlaylist([]);\n    cookies.remove(\"playlist\");\n  };\n\n  return (\n    <Container className=\"scroll\">\n      <ListGroup variant=\"flush\">\n        {playlist.length > 0 && (\n          <Row className=\"padding-5\">\n            <Col>\n              <h3 className=\"fancy-font\">Playlist</h3>\n            </Col>\n            <Col>\n              <Button variant=\"secondary\" onClick={() => handleClearPlaylist()}>\n                Clear Playlist\n              </Button>\n            </Col>\n          </Row>\n        )}\n        {playlist.map(song => {\n          return (\n            <ListGroup.Item>\n              <Row>\n                <Col className=\"horizontal\" md={4}>\n                  <Image src={song.imgSrc} thumbnail />\n                </Col>\n                <Col className=\"horizontal\" md={6}>\n                  <div className=\"small-text\">{song.title}</div>\n                </Col>\n                <Col className=\"horizontal\" md={2}>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => handleRemoveFromPlaylist(song)}\n                  >\n                    x\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Container>\n  );\n};\n\nexport default PlayList;\n","import React from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const ErrorAlert = props => {\n  const { content } = props;\n\n  return (\n    <Container className=\"padding-5\">\n      <Alert variant=\"danger\">\n        <Alert.Heading>{content.heading}</Alert.Heading>\n        <hr />\n        <p>{content.body}</p>\n      </Alert>\n    </Container>\n  );\n};\n\nexport default ErrorAlert;\n","import React, { useState } from \"react\";\nimport { without } from \"ramda\";\nimport ReactPlayer from \"react-player\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nexport const PlayWindow = props => {\n  const { playlist } = props;\n  const [startTime, setStartTime] = useState(Math.floor(Math.random() * 181));\n  const [video, setVideo] = useState(\n    playlist[Math.floor(Math.random() * playlist.length)]\n  );\n  const videoSrc = () =>\n    `https://www.youtube.com/embed/${video.videoId}?autoplay=1?start=${startTime}`;\n  const handleClickShuffleCurrent = () => {\n    setStartTime(Math.floor(Math.random() * 241));\n  };\n  const handleClickNext = () => {\n    if (playlist.length > 1) {\n      setVideo(\n        without([video], playlist)[\n          Math.floor(Math.random() * (playlist.length - 1))\n        ]\n      );\n    }\n    setStartTime(Math.floor(Math.random() * 241));\n  };\n\n  return (\n    <Container className=\"padding-5\">\n      <div style={{ width: 660, height: \"auto\" }}>\n        <ReactPlayer url={videoSrc()} playing={true} />\n      </div>\n      <div>\n        <Row className=\"text-center padding-5\">\n          <Col md={2} />\n          <Col md={4}>\n            <Button\n              variant=\"secondary\"\n              onClick={() => handleClickShuffleCurrent()}\n              size=\"lg\"\n            >\n              Shuffle Current\n            </Button>\n          </Col>\n          <Col md={4}>\n            <Button\n              variant=\"secondary\"\n              onClick={() => handleClickNext()}\n              size=\"lg\"\n            >\n              Next\n            </Button>\n          </Col>\n          <Col md={2} />\n        </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default PlayWindow;\n","import React from \"react\";\nimport { append } from \"ramda\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nexport const Search = props => {\n  const {\n    onSearchButtonClick,\n    setSearchString,\n    handlePlayClick,\n    playWindowOpen,\n    setErrorContent,\n    searchString,\n    setPlaylist,\n    playlist,\n    cookies\n  } = props;\n  const handleKeypress = e => {\n    if (e.which === 13) {\n      onSearchButtonClick();\n    }\n  };\n  const onAddUrlClick = async () => {\n    var videoId = searchString.split(\"v=\")[1];\n    if (videoId) {\n      var ampersandPosition = videoId.indexOf(\"&\");\n    }\n    if (videoId && ampersandPosition !== -1) {\n      videoId = videoId.substring(0, ampersandPosition);\n    }\n    const url = `https://www.youtube.com/oembed?url=http%3A//youtube.com/watch%3Fv%3D${videoId}&format=json`;\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    await axios\n      .get(proxyurl + url)\n      .then(response => {\n        const newPlaylist = append(\n          {\n            videoId: videoId,\n            title: response.data.title,\n            imgSrc: response.data.thumbnail_url\n          },\n          playlist\n        );\n        setSearchString(\"\");\n        setErrorContent(null);\n        setPlaylist(newPlaylist);\n        cookies.set(\"playlist\", JSON.stringify(newPlaylist), { path: \"/\" });\n      })\n      .catch(err => {\n        setErrorContent({\n          heading: \"Video Not Found\",\n          body: \"Check youtube url and try again.\"\n        });\n      });\n  };\n\n  return (\n    <InputGroup>\n      <FormControl\n        placeholder=\"search youtube\"\n        aria-label=\"search youtube\"\n        aria-describedby=\"basic-addon2\"\n        type=\"text\"\n        name=\"searchString\"\n        value={searchString}\n        onChange={e => setSearchString(e.target.value)}\n        onKeyPress={handleKeypress}\n      />\n      <InputGroup.Append>\n        <Button\n          type=\"submit\"\n          variant=\"outline-secondary\"\n          onClick={() => onSearchButtonClick()}\n        >\n          search\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"outline-secondary\"\n          onClick={() => onAddUrlClick()}\n        >\n          add url\n        </Button>\n        {!playWindowOpen && (\n          <Button variant=\"outline-secondary\" onClick={() => handlePlayClick()}>\n            play\n          </Button>\n        )}\n        {playWindowOpen && (\n          <Button variant=\"dark\" onClick={() => handlePlayClick()}>\n            play\n          </Button>\n        )}\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nexport const AddToPlayListButton = props => {\n  const {\n    handleAddToPlaylist,\n    handleRemoveFromPlaylist,\n    inPlaylist,\n    result\n  } = props;\n\n  return (\n    <div className=\"center\">\n      {!inPlaylist && (\n        <Button\n          variant=\"outline-secondary\"\n          onClick={() => handleAddToPlaylist(result)}\n        >\n          add\n        </Button>\n      )}\n      {inPlaylist && (\n        <Button variant=\"dark\" onClick={() => handleRemoveFromPlaylist(result)}>\n          remove\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default AddToPlayListButton;\n","import React from \"react\";\nimport { append, includes, pluck } from \"ramda\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport AddToPlayListButton from \"./AddToPlayListButton\";\n\nexport const SearchResults = props => {\n  const {\n    cookies,\n    playlist,\n    results,\n    setPlaylist,\n    handleRemoveFromPlaylist\n  } = props;\n  const handleAddToPlaylist = result => {\n    const newPlaylist = append(\n      {\n        videoId: result.id.videoId,\n        title: result.snippet.title,\n        imgSrc: result.snippet.thumbnails.default.url\n      },\n      playlist\n    );\n    setPlaylist(newPlaylist);\n    cookies.set(\"playlist\", JSON.stringify(newPlaylist), { path: \"/\" });\n  };\n  const inPlaylist = result => {\n    return includes(result.id.videoId, pluck(\"videoId\", playlist));\n  };\n\n  return (\n    <Container className=\"padding-5\">\n      <Row md={3} className=\"scroll\">\n        {results.map(result => {\n          return (\n            <Col md={4} key={result.id.videoId}>\n              <Card>\n                <Card.Img\n                  className={\n                    inPlaylist(result) ? \"grayscale-selected\" : \"grayscale\"\n                  }\n                  variant=\"top\"\n                  src={result.snippet.thumbnails.medium.url}\n                />\n                <Card.Body>\n                  <Card.Text>{result.snippet.title}</Card.Text>\n                  <AddToPlayListButton\n                    handleAddToPlaylist={handleAddToPlaylist}\n                    handleRemoveFromPlaylist={handleRemoveFromPlaylist}\n                    inPlaylist={inPlaylist(result)}\n                    result={result}\n                  />\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default SearchResults;\n","import axios from \"axios\";\n\nconst YOU_TUBE_API_KEY = \"AIzaSyDXaMYXXjrXu-e1V8ZzF2_098WbvqbP-pg\";\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3/\",\n  params: {\n    part: \"snippet\",\n    type: \"video\",\n    maxResults: 12,\n    key: YOU_TUBE_API_KEY\n  }\n});\n","import React, { useState } from \"react\";\nimport { without } from \"ramda\";\nimport \"./App.css\";\nimport Cookies from \"universal-cookie\";\n\nimport PlayList from \"./PlayList\";\nimport ErrorAlert from \"./ErrorAlert\";\nimport PlayWindow from \"./PlayWindow\";\nimport Search from \"./Search\";\nimport SearchResults from \"./SearchResults\";\nimport youtube from \"./youtube\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction App() {\n  const cookies = new Cookies();\n  const [playlist, setPlaylist] = useState(cookies.get(\"playlist\") || []);\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playWindowOpen, setPlayWindowOpen] = useState(false);\n  const [errorContent, setErrorContent] = useState();\n  const onSearchButtonClick = async () => {\n    await youtube\n      .get(\"/search\", {\n        params: {\n          q: searchString\n        }\n      })\n      .then(response => {\n        setSearchResults(response.data.items);\n        setErrorContent(null);\n      })\n      .catch(err => {\n        setErrorContent({\n          heading: \"API Limit Reached\",\n          body: \"You can still add youtube url above.\"\n        });\n      });\n    setPlayWindowOpen(false);\n  };\n  const handleRemoveFromPlaylist = result => {\n    const newPlaylist = without(\n      [\n        {\n          videoId: result.id.videoId,\n          title: result.snippet.title,\n          imgSrc: result.snippet.thumbnails.default.url\n        }\n      ],\n      playlist\n    );\n    setPlaylist(newPlaylist);\n    cookies.set(\"playlist\", newPlaylist, { path: \"/\" });\n  };\n  const handlePlayClick = () => {\n    if (playWindowOpen) {\n      setPlayWindowOpen(false);\n    } else {\n      if (playlist.length > 0) {\n        setPlayWindowOpen(true);\n        setErrorContent(null);\n      } else {\n        setErrorContent({\n          heading: \"Playlist empty\",\n          body: \"Add songs to playlist and try again.\"\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <div className=\"fancy-font title\">Sampling</div>\n      </Container>\n      <Search\n        setSearchString={setSearchString}\n        searchString={searchString}\n        onSearchButtonClick={onSearchButtonClick}\n        handlePlayClick={handlePlayClick}\n        playWindowOpen={playWindowOpen}\n        setPlaylist={setPlaylist}\n        setErrorContent={setErrorContent}\n        playlist={playlist}\n        cookies={cookies}\n      />\n      <Container>\n        <Row>\n          <Col sm={8}>\n            {searchResults.length > 0 && !playWindowOpen && (\n              <SearchResults\n                playlist={playlist}\n                results={searchResults}\n                setPlaylist={setPlaylist}\n                handleRemoveFromPlaylist={handleRemoveFromPlaylist}\n                cookies={cookies}\n              />\n            )}\n            {errorContent && !playWindowOpen && (\n              <ErrorAlert content={errorContent} />\n            )}\n            {playWindowOpen && <PlayWindow playlist={playlist} />}\n          </Col>\n          <Col sm={4}>\n            <PlayList\n              playlist={playlist}\n              handleRemoveFromPlaylist={handleRemoveFromPlaylist}\n              setPlaylist={setPlaylist}\n              cookies={cookies}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}